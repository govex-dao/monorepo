[Warning]: Dependency sources are no longer verified automatically during publication and upgrade, so the `--skip-dependency-verification` flag is no longer necessary.
INCLUDING DEPENDENCY futarchy_vault
INCLUDING DEPENDENCY AccountActions
INCLUDING DEPENDENCY Kiosk
INCLUDING DEPENDENCY futarchy_core
INCLUDING DEPENDENCY AccountProtocol
INCLUDING DEPENDENCY AccountExtensions
INCLUDING DEPENDENCY futarchy_markets
INCLUDING DEPENDENCY futarchy_one_shot_utils
INCLUDING DEPENDENCY Bridge
INCLUDING DEPENDENCY SuiSystem
INCLUDING DEPENDENCY Sui
INCLUDING DEPENDENCY MoveStdlib
BUILDING futarchy_multisig
[0m[1m[38;5;11mwarning[W01004][0m[1m: invalid documentation comment[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/../futarchy_markets/sources/spot/spot_oracle_interface.move:199:1
    [0m[34mâ”‚[0m  
[0m[34m199[0m [0m[34mâ”‚[0m [0m[33mâ•­[0m [0m[33m/// Example: How a lending protocol would use this[0m
[0m[34m200[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// [0m
[0m[34m201[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// ```move[0m
[0m[34m202[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// // In lending protocol[0m
    [0m[34mÂ·[0m [0m[33mâ”‚[0m
[0m[34m217[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// [0m
[0m[34m218[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// It just gets a continuous price feed that never stops.[0m
    [0m[34mâ”‚[0m [0m[33mâ•°[0m[0m[33mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€^ Documentation comment cannot be matched to a language item[0m

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_actions.move:5:18
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use sui::object::[0m[33mID[0m;
  [0m[34mâ”‚[0m                  [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_dispatcher.move:5:10
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::[0m[33mstring[0m;
  [0m[34mâ”‚[0m          [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'string'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_dispatcher.move:7:5
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m     [0m[33mobject[0m,
  [0m[34mâ”‚[0m     [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_dispatcher.move:8:17
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     tx_context::[0m[33mTxContext[0m,
  [0m[34mâ”‚[0m                 [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_dispatcher.move:15:38
   [0m[34mâ”‚[0m
[0m[34m15[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{[0m[33mSelf[0m, FutarchyConfig};
   [0m[34mâ”‚[0m                                      [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'futarchy_config'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_dispatcher.move:22:7
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m const [0m[33mECriticalPolicyRequiresCouncil[0m: u64 = 9;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [0m[33mThe constant 'ECriticalPolicyRequiresCouncil' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council.move:7:22
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m use sui::tx_context::[0m[33mTxContext[0m;
  [0m[34mâ”‚[0m                      [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[Lint W99010][0m[1m: unnecessary `entry` on a `public` function[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council.move:125:8
    [0m[34mâ”‚[0m
[0m[34m125[0m [0m[34mâ”‚[0m public [0m[33mentry[0m fun heartbeat(
    [0m[34mâ”‚[0m        [0m[33m^^^^^[0m [0m[33m`entry` on `public` functions limits composability as it adds restrictions, e.g. the type of each return value must have `drop`. `entry` on `public` is only meaningful in niche scenarios.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m `public` functions can be called from PTBs. `entry` can be used to allow non-`public` functions to be called from PTBs, but it adds restrictions on the usage of input arguments and on the type of return values. Unless this `public` function interacts with an intricate set of other `entry` functions, the `entry` modifier should be removed.
    [0m[34m=[0m This warning can be suppressed with '#[allow(lint(public_entry))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:6:14
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID},
  [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:6:20
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:6:20
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnused 'use' of alias 'ID'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:8:17
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     tx_context::[0m[33mTxContext[0m,
  [0m[34mâ”‚[0m                 [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:11:15
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m     account::{[0m[33mSelf[0m, Account},
   [0m[34mâ”‚[0m               [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'account'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:16:38
   [0m[34mâ”‚[0m
[0m[34m16[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{[0m[33mSelf[0m, FutarchyConfig};
   [0m[34mâ”‚[0m                                      [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'futarchy_config'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:18:44
   [0m[34mâ”‚[0m
[0m[34m18[0m [0m[34mâ”‚[0m use futarchy_multisig::weighted_multisig::{[0m[33mSelf[0m, WeightedMultisig, Approvals};
   [0m[34mâ”‚[0m                                            [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'weighted_multisig'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_custody.move:40:5
   [0m[34mâ”‚[0m
[0m[34m40[0m [0m[34mâ”‚[0m     [0m[33mctx[0m: &mut TxContext,
   [0m[34mâ”‚[0m     [0m[33m^^^[0m [0m[33mUnused parameter 'ctx'. Consider removing or prefixing with an underscore: '_ctx'[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W01004][0m[1m: invalid documentation comment[0m
     [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/../futarchy_core/sources/futarchy_config.move:1141:1
     [0m[34mâ”‚[0m  
[0m[34m1141[0m [0m[34mâ”‚[0m [0m[33mâ•­[0m [0m[33m/// Execute a proposal's intent with generic outcome type[0m
[0m[34m1142[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// Execute a proposal's intent with generic outcome type[0m
[0m[34m1143[0m [0m[34mâ”‚[0m [0m[33mâ”‚[0m [0m[33m/// This allows standard intents to work with any outcome type[0m
     [0m[34mâ”‚[0m [0m[33mâ•°[0m[0m[33mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€^ Documentation comment cannot be matched to a language item[0m

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:20:5
   [0m[34mâ”‚[0m
[0m[34m20[0m [0m[34mâ”‚[0m     [0m[33mascii[0m,
   [0m[34mâ”‚[0m     [0m[33m^^^^^[0m [0m[33mUnused 'use' of alias 'ascii'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:90:36
   [0m[34mâ”‚[0m
[0m[34m90[0m [0m[34mâ”‚[0m     vault_spend_by_type(type_name::[0m[33mget[0m<CoinType>())
   [0m[34mâ”‚[0m                                    [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:105:35
    [0m[34mâ”‚[0m
[0m[34m105[0m [0m[34mâ”‚[0m     vault_mint_by_type(type_name::[0m[33mget[0m<CoinType>())
    [0m[34mâ”‚[0m                                   [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:122:54
    [0m[34mâ”‚[0m
[0m[34m122[0m [0m[34mâ”‚[0m     let type_str = type_name::into_string(type_name::[0m[33mget[0m<CoinType>());
    [0m[34mâ”‚[0m                                                      [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:202:55
    [0m[34mâ”‚[0m
[0m[34m202[0m [0m[34mâ”‚[0m     let asset_str = type_name::into_string(type_name::[0m[33mget[0m<AssetType>());
    [0m[34mâ”‚[0m                                                       [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:205:56
    [0m[34mâ”‚[0m
[0m[34m205[0m [0m[34mâ”‚[0m     let stable_str = type_name::into_string(type_name::[0m[33mget[0m<StableType>());
    [0m[34mâ”‚[0m                                                        [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:215:55
    [0m[34mâ”‚[0m
[0m[34m215[0m [0m[34mâ”‚[0m     let asset_str = type_name::into_string(type_name::[0m[33mget[0m<AssetType>());
    [0m[34mâ”‚[0m                                                       [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:218:56
    [0m[34mâ”‚[0m
[0m[34m218[0m [0m[34mâ”‚[0m     let stable_str = type_name::into_string(type_name::[0m[33mget[0m<StableType>());
    [0m[34mâ”‚[0m                                                        [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:228:55
    [0m[34mâ”‚[0m
[0m[34m228[0m [0m[34mâ”‚[0m     let asset_str = type_name::into_string(type_name::[0m[33mget[0m<AssetType>());
    [0m[34mâ”‚[0m                                                       [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:231:56
    [0m[34mâ”‚[0m
[0m[34m231[0m [0m[34mâ”‚[0m     let stable_str = type_name::into_string(type_name::[0m[33mget[0m<StableType>());
    [0m[34mâ”‚[0m                                                        [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/resources.move:277:54
    [0m[34mâ”‚[0m
[0m[34m277[0m [0m[34mâ”‚[0m     let type_str = type_name::into_string(type_name::[0m[33mget[0m<CoinType>());
    [0m[34mâ”‚[0m                                                      [0m[33m^^^[0m [0m[33mThe function 'std::type_name::get' is deprecated: Renamed to `with_defining_ids` for clarity.[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:7:19
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m use std::string::{[0m[33mSelf[0m, String};
  [0m[34mâ”‚[0m                   [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'string'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:8:19
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m use sui::object::{[0m[33mID[0m, UID};
  [0m[34mâ”‚[0m                   [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:8:23
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m use sui::object::{ID, [0m[33mUID[0m};
  [0m[34mâ”‚[0m                       [0m[33m^^^[0m [0m[33mUnnecessary alias 'UID' for module member 'sui::object::UID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:8:23
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m use sui::object::{ID, [0m[33mUID[0m};
  [0m[34mâ”‚[0m                       [0m[33m^^^[0m [0m[33mUnused 'use' of alias 'UID'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:11:22
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m use sui::tx_context::[0m[33mTxContext[0m;
   [0m[34mâ”‚[0m                      [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/policy/policy_registry.move:14:24
   [0m[34mâ”‚[0m
[0m[34m14[0m [0m[34mâ”‚[0m use futarchy_multisig::[0m[33mresources[0m;
   [0m[34mâ”‚[0m                        [0m[33m^^^^^^^^^[0m [0m[33mUnused 'use' of alias 'resources'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:5:27
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::String, [0m[33moption[0m};
  [0m[34mâ”‚[0m                           [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'option' for module 'std::option'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:5:27
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::String, [0m[33moption[0m};
  [0m[34mâ”‚[0m                           [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'option'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:6:34
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m use sui::{clock::Clock, object::{[0m[33mSelf[0m, ID}};
  [0m[34mâ”‚[0m                                  [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:6:40
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m use sui::{clock::Clock, object::{Self, [0m[33mID[0m}};
  [0m[34mâ”‚[0m                                        [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:6:40
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m use sui::{clock::Clock, object::{Self, [0m[33mID[0m}};
  [0m[34mâ”‚[0m                                        [0m[33m^^[0m [0m[33mUnused 'use' of alias 'ID'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:11:22
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m use sui::tx_context::[0m[33mTxContext[0m;
   [0m[34mâ”‚[0m                      [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:13:60
   [0m[34mâ”‚[0m
[0m[34m13[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{Self, FutarchyConfig, [0m[33mGenericApproval[0m};
   [0m[34mâ”‚[0m                                                            [0m[33m^^^^^^^^^^^^^^^[0m [0m[33mUnused 'use' of alias 'GenericApproval'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:34:34
   [0m[34mâ”‚[0m
[0m[34m34[0m [0m[34mâ”‚[0m     let key_bytes = resource_key.[0m[33mbytes[0m();
   [0m[34mâ”‚[0m                                  [0m[33m^^^^^[0m [0m[33mThe method 'bytes' resolves to the function 'std::string::bytes' which is deprecated: Use `std::string::as_bytes` instead.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:86:45
   [0m[34mâ”‚[0m
[0m[34m86[0m [0m[34mâ”‚[0m     let (dao_id, action_type, approved_key, [0m[33mmetadata[0m, expires_at) = 
   [0m[34mâ”‚[0m                                             [0m[33m^^^^^^^^[0m [0m[33mUnused local variable 'metadata'. Consider removing or prefixing with an underscore: '_metadata'[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/policy_registry_coexec.move:139:9
    [0m[34mâ”‚[0m
[0m[34m139[0m [0m[34mâ”‚[0m     let [0m[33mcfg[0m = account::config(dao);
    [0m[34mâ”‚[0m         [0m[33m^^^[0m [0m[33mUnused local variable 'cfg'. Consider removing or prefixing with an underscore: '_cfg'[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:5:20
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::{[0m[33mSelf[0m, String}, hash, vector};
  [0m[34mâ”‚[0m                    [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'string'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:5:26
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::{Self, [0m[33mString[0m}, hash, vector};
  [0m[34mâ”‚[0m                          [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'String'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:5:35
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::{Self, String}, [0m[33mhash[0m, vector};
  [0m[34mâ”‚[0m                                   [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'hash'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:5:41
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::{Self, String}, hash, [0m[33mvector[0m};
  [0m[34mâ”‚[0m                                         [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'vector' for module 'std::vector'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:5:41
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m use std::{string::{Self, String}, hash, [0m[33mvector[0m};
  [0m[34mâ”‚[0m                                         [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'vector'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This alias does not shadow the built-in type 'vector' in type annotations.
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:8:14
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID},
  [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:8:20
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:8:20
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnused 'use' of alias 'ID'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:11:17
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m     tx_context::[0m[33mTxContext[0m,
   [0m[34mâ”‚[0m                 [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:14:15
   [0m[34mâ”‚[0m
[0m[34m14[0m [0m[34mâ”‚[0m     account::{[0m[33mSelf[0m, Account},
   [0m[34mâ”‚[0m               [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'account'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:19:60
   [0m[34mâ”‚[0m
[0m[34m19[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{Self, FutarchyConfig, [0m[33mGenericApproval[0m};
   [0m[34mâ”‚[0m                                                            [0m[33m^^^^^^^^^^^^^^^[0m [0m[33mUnused 'use' of alias 'GenericApproval'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:23:5
   [0m[34mâ”‚[0m
[0m[34m23[0m [0m[34mâ”‚[0m     [0m[33msecurity_council_intents[0m,
   [0m[34mâ”‚[0m     [0m[33m^^^^^^^^^^^^^^^^^^^^^^^^[0m [0m[33mUnused 'use' of alias 'security_council_intents'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:27:25
   [0m[34mâ”‚[0m
[0m[34m27[0m [0m[34mâ”‚[0m     weighted_multisig::{[0m[33mSelf[0m, WeightedMultisig, Approvals},
   [0m[34mâ”‚[0m                         [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'weighted_multisig'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:33:7
   [0m[34mâ”‚[0m
[0m[34m33[0m [0m[34mâ”‚[0m const [0m[33mECapIdMismatch[0m: u64 = 1001;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^[0m [0m[33mThe constant 'ECapIdMismatch' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:60:26
   [0m[34mâ”‚[0m
[0m[34m60[0m [0m[34mâ”‚[0m     assert!(resource_key.[0m[33mbytes[0m().length() >= 11 && 
   [0m[34mâ”‚[0m                          [0m[33m^^^^^[0m [0m[33mThe method 'bytes' resolves to the function 'std::string::bytes' which is deprecated: Use `std::string::as_bytes` instead.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W04037][0m[1m: deprecated usage[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/upgrade_cap_coexec.move:63:46
   [0m[34mâ”‚[0m
[0m[34m63[0m [0m[34mâ”‚[0m                 let key_bytes = resource_key.[0m[33mbytes[0m();
   [0m[34mâ”‚[0m                                              [0m[33m^^^^^[0m [0m[33mThe method 'bytes' resolves to the function 'std::string::bytes' which is deprecated: Use `std::string::as_bytes` instead.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(deprecated_usage)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:14:14
   [0m[34mâ”‚[0m
[0m[34m14[0m [0m[34mâ”‚[0m     string::{[0m[33mSelf[0m, String},
   [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'string'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:15:14
   [0m[34mâ”‚[0m
[0m[34m15[0m [0m[34mâ”‚[0m     option::{[0m[33mSelf[0m, Option},
   [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'option' for module 'std::option'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:15:20
   [0m[34mâ”‚[0m
[0m[34m15[0m [0m[34mâ”‚[0m     option::{Self, [0m[33mOption[0m},
   [0m[34mâ”‚[0m                    [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'Option' for module member 'std::option::Option'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:16:5
   [0m[34mâ”‚[0m
[0m[34m16[0m [0m[34mâ”‚[0m     [0m[33mvector[0m,
   [0m[34mâ”‚[0m     [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'vector' for module 'std::vector'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:22:14
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID, UID},
   [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:22:20
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m, UID},
   [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:22:24
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m     object::{Self, ID, [0m[33mUID[0m},
   [0m[34mâ”‚[0m                        [0m[33m^^^[0m [0m[33mUnnecessary alias 'UID' for module member 'sui::object::UID'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:22:24
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m     object::{Self, ID, [0m[33mUID[0m},
   [0m[34mâ”‚[0m                        [0m[33m^^^[0m [0m[33mUnused 'use' of alias 'UID'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:23:18
   [0m[34mâ”‚[0m
[0m[34m23[0m [0m[34mâ”‚[0m     tx_context::{[0m[33mSelf[0m, TxContext},
   [0m[34mâ”‚[0m                  [0m[33m^^^^[0m [0m[33mUnnecessary alias 'tx_context' for module 'sui::tx_context'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:23:24
   [0m[34mâ”‚[0m
[0m[34m23[0m [0m[34mâ”‚[0m     tx_context::{Self, [0m[33mTxContext[0m},
   [0m[34mâ”‚[0m                        [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:29:15
   [0m[34mâ”‚[0m
[0m[34m29[0m [0m[34mâ”‚[0m     intents::{[0m[33mIntent[0m},
   [0m[34mâ”‚[0m               [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'Intent'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:32:38
   [0m[34mâ”‚[0m
[0m[34m32[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{[0m[33mSelf[0m, FutarchyConfig};
   [0m[34mâ”‚[0m                                      [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'futarchy_config'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:35:7
   [0m[34mâ”‚[0m
[0m[34m35[0m [0m[34mâ”‚[0m const [0m[33mENotSecurityCouncil[0m: u64 = 1;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^^^^^^[0m [0m[33mThe constant 'ENotSecurityCouncil' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:38:7
   [0m[34mâ”‚[0m
[0m[34m38[0m [0m[34mâ”‚[0m const [0m[33mEIntentAlreadyChallenged[0m: u64 = 4;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^^^^^^^^^^^[0m [0m[33mThe constant 'EIntentAlreadyChallenged' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:43:7
   [0m[34mâ”‚[0m
[0m[34m43[0m [0m[34mâ”‚[0m const [0m[33mEDuplicateIntent[0m: u64 = 9;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^^^[0m [0m[33mThe constant 'EDuplicateIntent' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09011][0m[1m: unused constant[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/optimistic_intents.move:44:7
   [0m[34mâ”‚[0m
[0m[34m44[0m [0m[34mâ”‚[0m const [0m[33mEInvalidWaitingPeriod[0m: u64 = 10;
   [0m[34mâ”‚[0m       [0m[33m^^^^^^^^^^^^^^^^^^^^^[0m [0m[33mThe constant 'EInvalidWaitingPeriod' is never used. Consider removing it.[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_const)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_common.move:7:14
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID},
  [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/coexec/coexec_common.move:7:20
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:3:36
  [0m[34mâ”‚[0m
[0m[34m3[0m [0m[34mâ”‚[0m use std::{string::String, option::{[0m[33mSelf[0m, Option}};
  [0m[34mâ”‚[0m                                    [0m[33m^^^^[0m [0m[33mUnnecessary alias 'option' for module 'std::option'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:3:36
  [0m[34mâ”‚[0m
[0m[34m3[0m [0m[34mâ”‚[0m use std::{string::String, option::{[0m[33mSelf[0m, Option}};
  [0m[34mâ”‚[0m                                    [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'option'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:3:42
  [0m[34mâ”‚[0m
[0m[34m3[0m [0m[34mâ”‚[0m use std::{string::String, option::{Self, [0m[33mOption[0m}};
  [0m[34mâ”‚[0m                                          [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'Option' for module member 'std::option::Option'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:3:42
  [0m[34mâ”‚[0m
[0m[34m3[0m [0m[34mâ”‚[0m use std::{string::String, option::{Self, [0m[33mOption[0m}};
  [0m[34mâ”‚[0m                                          [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'Option'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:7:14
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID},
  [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:7:20
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
  [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:8:16
  [0m[34mâ”‚[0m
[0m[34m8[0m [0m[34mâ”‚[0m     transfer::{[0m[33mSelf[0m, Receiving},
  [0m[34mâ”‚[0m                [0m[33m^^^^[0m [0m[33mUnnecessary alias 'transfer' for module 'sui::transfer'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:9:17
  [0m[34mâ”‚[0m
[0m[34m9[0m [0m[34mâ”‚[0m     tx_context::[0m[33mTxContext[0m,
  [0m[34mâ”‚[0m                 [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:13:21
   [0m[34mâ”‚[0m
[0m[34m13[0m [0m[34mâ”‚[0m     intents::{Self, [0m[33mIntent[0m, Params, Expired},
   [0m[34mâ”‚[0m                     [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'Intent'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:22:38
   [0m[34mâ”‚[0m
[0m[34m22[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{[0m[33mSelf[0m, FutarchyConfig};
   [0m[34mâ”‚[0m                                      [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'futarchy_config'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:114:27
    [0m[34mâ”‚[0m
[0m[34m 12[0m [0m[34mâ”‚[0m     account::{Self, Account, Auth},
    [0m[34mâ”‚[0m               [0m[34m----[0m [0m[34mThe same alias was previously declared here[0m
    [0m[34mÂ·[0m
[0m[34m114[0m [0m[34mâ”‚[0m     use account_protocol::[0m[33maccount[0m;
    [0m[34mâ”‚[0m                           [0m[33m^^^^^^^[0m [0m[33mUnnecessary alias 'account' for module 'account_protocol::account'. It was already in scope[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09012][0m[1m: unused 'mut' modifiers[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:174:9
    [0m[34mâ”‚[0m
[0m[34m174[0m [0m[34mâ”‚[0m     mut [0m[33mexecutable[0m: Executable<Approvals>,
    [0m[34mâ”‚[0m     [0m[34m---[0m [0m[33m^^^^^^^^^^[0m [0m[33mThe variable 'executable' is never used mutably[0m
    [0m[34mâ”‚[0m     [0m[34mâ”‚[0m    
    [0m[34mâ”‚[0m     [0m[34mConsider removing the 'mut' declaration here[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_let_mut)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:313:9
    [0m[34mâ”‚[0m
[0m[34m313[0m [0m[34mâ”‚[0m     let [0m[33mcouncil_id[0m = object::id(&council);
    [0m[34mâ”‚[0m         [0m[33m^^^^^^^^^^[0m [0m[33mUnused local variable 'council_id'. Consider removing or prefixing with an underscore: '_council_id'[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09012][0m[1m: unused 'mut' modifiers[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:409:9
    [0m[34mâ”‚[0m
[0m[34m409[0m [0m[34mâ”‚[0m     mut [0m[33mexecutable[0m: Executable<Approvals>,
    [0m[34mâ”‚[0m     [0m[34m---[0m [0m[33m^^^^^^^^^^[0m [0m[33mThe variable 'executable' is never used mutably[0m
    [0m[34mâ”‚[0m     [0m[34mâ”‚[0m    
    [0m[34mâ”‚[0m     [0m[34mConsider removing the 'mut' declaration here[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_let_mut)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:637:5
    [0m[34mâ”‚[0m
[0m[34m637[0m [0m[34mâ”‚[0m     [0m[33mdao_id[0m: ID,
    [0m[34mâ”‚[0m     [0m[33m^^^^^^[0m [0m[33mUnused parameter 'dao_id'. Consider removing or prefixing with an underscore: '_dao_id'[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09002][0m[1m: unused variable[0m
    [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_intents.move:667:5
    [0m[34mâ”‚[0m
[0m[34m667[0m [0m[34mâ”‚[0m     [0m[33mdao_id[0m: ID,
    [0m[34mâ”‚[0m     [0m[33m^^^^^^[0m [0m[33mUnused parameter 'dao_id'. Consider removing or prefixing with an underscore: '_dao_id'[0m
    [0m[34mâ”‚[0m
    [0m[34m=[0m This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:5:15
  [0m[34mâ”‚[0m
[0m[34m5[0m [0m[34mâ”‚[0m     account::{[0m[33mSelf[0m, Account},
  [0m[34mâ”‚[0m               [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'account'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:6:15
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m     intents::{[0m[33mIntent[0m, Params},
  [0m[34mâ”‚[0m               [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'Intent'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:11:14
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m     object::{[0m[33mSelf[0m, ID},
   [0m[34mâ”‚[0m              [0m[33m^^^^[0m [0m[33mUnnecessary alias 'object' for module 'sui::object'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:11:20
   [0m[34mâ”‚[0m
[0m[34m11[0m [0m[34mâ”‚[0m     object::{Self, [0m[33mID[0m},
   [0m[34mâ”‚[0m                    [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:12:17
   [0m[34mâ”‚[0m
[0m[34m12[0m [0m[34mâ”‚[0m     tx_context::[0m[33mTxContext[0m,
   [0m[34mâ”‚[0m                 [0m[33m^^^^^^^^^[0m [0m[33mUnnecessary alias 'TxContext' for module member 'sui::tx_context::TxContext'. This alias is provided by default[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:14:19
   [0m[34mâ”‚[0m
[0m[34m14[0m [0m[34mâ”‚[0m use std::string::{[0m[33mSelf[0m, String};
   [0m[34mâ”‚[0m                   [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'string'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
   [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/upgrade_cap_intents.move:17:38
   [0m[34mâ”‚[0m
[0m[34m17[0m [0m[34mâ”‚[0m use futarchy_core::futarchy_config::{[0m[33mSelf[0m, FutarchyConfig};
   [0m[34mâ”‚[0m                                      [0m[33m^^^^[0m [0m[33mUnused 'use' of alias 'futarchy_config'. Consider removing it[0m
   [0m[34mâ”‚[0m
   [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_actions.move:6:35
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m use std::{string::String, option::[0m[33mOption[0m};
  [0m[34mâ”‚[0m                                   [0m[33m^^^^^^[0m [0m[33mUnnecessary alias 'Option' for module member 'std::option::Option'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W09001][0m[1m: unused alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_actions.move:6:35
  [0m[34mâ”‚[0m
[0m[34m6[0m [0m[34mâ”‚[0m use std::{string::String, option::[0m[33mOption[0m};
  [0m[34mâ”‚[0m                                   [0m[33m^^^^^^[0m [0m[33mUnused 'use' of alias 'Option'. Consider removing it[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

[0m[1m[38;5;11mwarning[W02021][0m[1m: duplicate alias[0m
  [0m[34mâ”Œâ”€[0m /Users/admin/monorepo/contracts/futarchy_multisig/sources/security_council_actions.move:7:18
  [0m[34mâ”‚[0m
[0m[34m7[0m [0m[34mâ”‚[0m use sui::object::[0m[33mID[0m;
  [0m[34mâ”‚[0m                  [0m[33m^^[0m [0m[33mUnnecessary alias 'ID' for module member 'sui::object::ID'. This alias is provided by default[0m
  [0m[34mâ”‚[0m
  [0m[34m=[0m This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

Please report feedback on the linter warnings at https://forums.sui.io

Total number of linter warnings suppressed: 1 (unique lints: 1)
Skipping dependency verification
Error executing transaction '5Yd17cg5XQnCiaejf5t9AZ4TrWCh7PMudYk2fGioDvtH': PublishUpgradeMissingDependency in command 0
