========================================
FRESH REDEPLOYMENT OF ALL PACKAGES
========================================

Starting fresh deployment...

----------------------------------------
Deploying Kiosk from /Users/admin/monorepo/contracts/move-framework/deps/kiosk...
Building...
[note] Dependencies on Bridge, MoveStdlib, Sui, and SuiSystem are automatically added, but this feature is disabled for your package because you have explicitly included dependencies on Sui. Consider removing these dependencies from Move.toml.
INCLUDING DEPENDENCY Sui
INCLUDING DEPENDENCY MoveStdlib
BUILDING Kiosk
Publishing...
‚úÖ Kiosk deployed: ‚îÇ

----------------------------------------
Deploying AccountExtensions from /Users/admin/monorepo/contracts/move-framework/packages/extensions...
Building...
INCLUDING DEPENDENCY Bridge
INCLUDING DEPENDENCY SuiSystem
INCLUDING DEPENDENCY Sui
INCLUDING DEPENDENCY MoveStdlib
BUILDING AccountExtensions
[0m[1m[38;5;11mwarning[Lint W99010][0m[1m: unnecessary `entry` on a `public` function[0m
    [0m[34m‚îå‚îÄ[0m ./sources/extensions.move:139:8
    [0m[34m‚îÇ[0m
[0m[34m139[0m [0m[34m‚îÇ[0m public [0m[33mentry[0m fun new_admin(_: &AdminCap, recipient: address, ctx: &mut TxContext) {
    [0m[34m‚îÇ[0m        [0m[33m^^^^^[0m [0m[33m`entry` on `public` functions limits composability as it adds restrictions, e.g. the type of each return value must have `drop`. `entry` on `public` is only meaningful in niche scenarios.[0m
    [0m[34m‚îÇ[0m
    [0m[34m=[0m `public` functions can be called from PTBs. `entry` can be used to allow non-`public` functions to be called from PTBs, but it adds restrictions on the usage of input arguments and on the type of return values. Unless this `public` function interacts with an intricate set of other `entry` functions, the `entry` modifier should be removed.
    [0m[34m=[0m This warning can be suppressed with '#[allow(lint(public_entry))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

Please report feedback on the linter warnings at https://forums.sui.io

Publishing...
‚úÖ AccountExtensions deployed: ‚îÇ

----------------------------------------
Deploying AccountProtocol from /Users/admin/monorepo/contracts/move-framework/packages/protocol...
Building...
Failed to build Move modules: Error parsing '[addresses]' section of manifest

Caused by:
    0: Invalid address '‚îÇ' encountered.
    1: Unable to parse AccountAddress (must be hex string of length 32).
Publishing...
‚ùå Failed to deploy AccountProtocol
Full output:
[Note]: Dependency sources are no longer verified automatically during publication and upgrade. You can pass the `--verify-deps` option if you would like to verify them as part of publication or upgrade.
Failed to build Move modules: Error parsing '[addresses]' section of manifest

Caused by:
    0: Invalid address '‚îÇ' encountered.
    1: Unable to parse AccountAddress (must be hex string of length 32).
